class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>> res;
        if (nums.empty())
            return res;                        
        sort(nums.begin(), nums.end());  
        for (int i = 0; i < nums.size(); i++)
        { 
            for (int j = i + 1; j < nums.size(); j++)
            {
                int target_sum = target - nums[i] - nums[j];  
                int left = j + 1;
                int right = nums.size() - 1;

                while (left < right)
                {
                    int two_sum = nums[left] + nums[right];
                    if (two_sum > target_sum)
                        right--;
                    else if (two_sum < target_sum)
                        left++;
                    else
                    {
                        vector<int> quad(4, 0);
                        quad[0] = nums[i];
                        quad[1] = nums[j];
                        quad[2] = nums[left];
                        quad[3] = nums[right];
                        res.push_back(quad); 
                        while (left < right && nums[left] == quad[2])
                            ++left;
                        while (left < right && nums[right] == quad[3])
                            --right;
                    }
                }
                while (j < nums.size() - 1 && nums[j] == nums[j + 1])
                    ++j;
            }
            while (i < nums.size() - 1 && nums[i + 1] == nums[i])
                ++i;
        }
        return res;
    }
};
